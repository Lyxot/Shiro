name: Build Release

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 1 * *'

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Get version
        id: version
        run: |
          echo "version=v$(date +%y).$(date +%-m).1" >> $GITHUB_OUTPUT

  docker:
    runs-on: ubuntu-latest
    needs: version
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          repository: Lyxot/Shiro
          lfs: true
          ref: main

      - name: Git tag
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git tag -a ${{ needs.version.outputs.version }} -m "Release ${{ needs.version.outputs.version }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            lyxot/shiro
          tags: |
            type=semver,pattern={{version}},value=${{ needs.version.outputs.version }}
            type=semver,pattern={{major}},value=${{ needs.version.outputs.version }}
            type=raw,value=latest

      - name: Build and export to Docker
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    needs: version
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          repository: Lyxot/Shiro
          fetch-depth: 0
          lfs: true
          ref: main

      - name: Checkout LFS objects
        run: git lfs checkout

      - name: Git tag
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git tag -a ${{ needs.version.outputs.version }} -m "Release ${{ needs.version.outputs.version }}" || :

      - uses: pnpm/action-setup@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build project
        run: |
          sh ./ci-release-build.sh

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          removeArtifacts: true
          tag: ${{ needs.version.outputs.version }}
          makeLatest: true
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: ./assets/release.zip
